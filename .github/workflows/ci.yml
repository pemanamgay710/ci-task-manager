name: Flask CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: ⚙️ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔍 Run tests
        env:
          SECRET_KEY: test-secret
          JWT_SECRET_KEY: test-jwt-secret
        run: |
          pytest --maxfail=1 --disable-warnings -q

  lint:
    runs-on: ubuntu-latest
    continue-on-error: true  # ✅ Prevents CI from failing due to linting
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: ⚡ Install flake8 and autopep8
        run: |
          pip install flake8 autopep8

      - name: 🔎 Lint and Auto-fix Python style issues
        run: |
          echo "Running flake8 (ignore some minor warnings)..."
          flake8 --ignore=E501,F401,E302,E305,E303,E402 --exit-zero .
          echo "Auto-formatting with autopep8..."
          autopep8 --in-place --recursive --aggressive --aggressive .

      - name: ✅ Confirm final lint check (non-blocking)
        run: |
          flake8 --ignore=E501,F401,E302,E305,E303,E402 --exit-zero .
  
  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test  # only build Docker image if tests pass
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Build Docker image
        run: docker build -t flask-task-manager:latest .

      - name: ✅ Verify container runs
        run: docker run --rm flask-task-manager:latest pytest -q

  publish-docker:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🔑 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: namgay527/flask-task-manager:latest
